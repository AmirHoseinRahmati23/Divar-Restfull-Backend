<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About This Persona</value>
  </data>
  <data name="AdditionalInfo" xml:space="preserve">
    <value>Additional Info</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AgePerKilometer" xml:space="preserve">
    <value>Age Per Kilometer</value>
  </data>
  <data name="Apartment" xml:space="preserve">
    <value>Apartment</value>
  </data>
  <data name="AutomaticGear" xml:space="preserve">
    <value>Automatic Gear</value>
  </data>
  <data name="BackGotHit" xml:space="preserve">
    <value>Back Got Hit</value>
  </data>
  <data name="BackGotHitFrontPainted" xml:space="preserve">
    <value>Back Got Hit Front Painted</value>
  </data>
  <data name="BackPainted" xml:space="preserve">
    <value>Back Painted</value>
  </data>
  <data name="BothGotHit" xml:space="preserve">
    <value>Both Got Hit</value>
  </data>
  <data name="BothHealthy" xml:space="preserve">
    <value>Both Healthy</value>
  </data>
  <data name="BothPainted" xml:space="preserve">
    <value>Both Painted</value>
  </data>
  <data name="Brand" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="BrandSubModels" xml:space="preserve">
    <value>Brands' Models</value>
  </data>
  <data name="BrandType" xml:space="preserve">
    <value>Brand Type</value>
  </data>
  <data name="CanBeExchanged" xml:space="preserve">
    <value>I'm Willing To Exchange</value>
  </data>
  <data name="CarBodyStatus" xml:space="preserve">
    <value>Car Body Status</value>
  </data>
  <data name="CarBrand" xml:space="preserve">
    <value>Car Brand</value>
  </data>
  <data name="CarChassisStatus" xml:space="preserve">
    <value>Chassis' Status</value>
  </data>
  <data name="CarGearBoxStatus" xml:space="preserve">
    <value>Gearboxs' Status</value>
  </data>
  <data name="CarInsuranceTimeRemained" xml:space="preserve">
    <value>Insurance Time Remained</value>
  </data>
  <data name="CarModel" xml:space="preserve">
    <value>Car Creation Year</value>
  </data>
  <data name="CarMotorStatus" xml:space="preserve">
    <value>Motors' Status</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Changed" xml:space="preserve">
    <value>Changed</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="ColorCode" xml:space="preserve">
    <value>Color Code</value>
  </data>
  <data name="ColoredSmoothing" xml:space="preserve">
    <value>Colored Smoothing</value>
  </data>
  <data name="ColorLessSmoothing" xml:space="preserve">
    <value>Colorless Smoothing</value>
  </data>
  <data name="CompletelyPainted" xml:space="preserve">
    <value>Completely Painted</value>
  </data>
  <data name="ComputerBrand" xml:space="preserve">
    <value>Computer Brand</value>
  </data>
  <data name="ConstructionYear" xml:space="preserve">
    <value>Construction Year</value>
  </data>
  <data name="CPU" xml:space="preserve">
    <value>CPU</value>
  </data>
  <data name="Crashed" xml:space="preserve">
    <value>Crashed</value>
  </data>
  <data name="Deposit" xml:space="preserve">
    <value>Deposit</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EightMonths" xml:space="preserve">
    <value>Eight Months</value>
  </data>
  <data name="ElevenMonths" xml:space="preserve">
    <value>Eleven Months</value>
  </data>
  <data name="Facilities" xml:space="preserve">
    <value>Facilities</value>
  </data>
  <data name="Family" xml:space="preserve">
    <value>a Family</value>
  </data>
  <data name="FamilyOrSingle" xml:space="preserve">
    <value>a Family or a Single Man\Woman</value>
  </data>
  <data name="FiveMonths" xml:space="preserve">
    <value>Five Months</value>
  </data>
  <data name="FloorNumber" xml:space="preserve">
    <value>Floor Number</value>
  </data>
  <data name="FourMonths" xml:space="preserve">
    <value>Four Months</value>
  </data>
  <data name="FrontGotHit" xml:space="preserve">
    <value>Front Got Hit</value>
  </data>
  <data name="FrontGotHitBackPainted" xml:space="preserve">
    <value>Front Got Hit Back Painted</value>
  </data>
  <data name="FrontPainted" xml:space="preserve">
    <value>Front Painted</value>
  </data>
  <data name="GoodAsNew" xml:space="preserve">
    <value>As Good As New</value>
  </data>
  <data name="HasCellar" xml:space="preserve">
    <value>Has a Cellar?</value>
  </data>
  <data name="HasElevator" xml:space="preserve">
    <value>Has an Elevator?</value>
  </data>
  <data name="HasParking" xml:space="preserve">
    <value>Has a Parking?</value>
  </data>
  <data name="Healthy" xml:space="preserve">
    <value>Healthy</value>
  </data>
  <data name="HouseType" xml:space="preserve">
    <value>House Type</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>{0} Identity</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="InsertDateTime" xml:space="preserve">
    <value>Insert Date Time</value>
  </data>
  <data name="IsActive" xml:space="preserve">
    <value>Is Active?</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Mansion" xml:space="preserve">
    <value>Mansion</value>
  </data>
  <data name="ManualGear" xml:space="preserve">
    <value>Manual Gear</value>
  </data>
  <data name="MemorySize" xml:space="preserve">
    <value>Memory Size</value>
  </data>
  <data name="Meterage" xml:space="preserve">
    <value>Meterage</value>
  </data>
  <data name="MinorScratches" xml:space="preserve">
    <value>Minor Scratches</value>
  </data>
  <data name="MobileBrand" xml:space="preserve">
    <value>Mobile Brand</value>
  </data>
  <data name="MonthlyRent" xml:space="preserve">
    <value>Monthly Rent</value>
  </data>
  <data name="NeedForRepair" xml:space="preserve">
    <value>Need For Repair</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="NineMonths" xml:space="preserve">
    <value>Nine Months</value>
  </data>
  <data name="NoScratches" xml:space="preserve">
    <value>No Scratches</value>
  </data>
  <data name="NumberOfFloors" xml:space="preserve">
    <value>Number Of Floors</value>
  </data>
  <data name="NumberOfRooms" xml:space="preserve">
    <value>Number Of Rooms</value>
  </data>
  <data name="ObjectBrand" xml:space="preserve">
    <value>Object Brand</value>
  </data>
  <data name="OneMonth" xml:space="preserve">
    <value>One Month</value>
  </data>
  <data name="OperatingSystem" xml:space="preserve">
    <value>Operating System</value>
  </data>
  <data name="Painted" xml:space="preserve">
    <value>Painted</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="PricePerMeter" xml:space="preserve">
    <value>Price Per Meter</value>
  </data>
  <data name="Professions" xml:space="preserve">
    <value>Professions</value>
  </data>
  <data name="RAM" xml:space="preserve">
    <value>RAM</value>
  </data>
  <data name="Scrap" xml:space="preserve">
    <value>Scrap</value>
  </data>
  <data name="ScreenSize" xml:space="preserve">
    <value>Screen Size</value>
  </data>
  <data name="SecondHand" xml:space="preserve">
    <value>SecondHand</value>
  </data>
  <data name="ServiceRange" xml:space="preserve">
    <value>Service Range</value>
  </data>
  <data name="SevenMonths" xml:space="preserve">
    <value>Seven Months</value>
  </data>
  <data name="SixMonths" xml:space="preserve">
    <value>Twelve Months</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Store" xml:space="preserve">
    <value>Store</value>
  </data>
  <data name="SubCategories" xml:space="preserve">
    <value>SubCategories</value>
  </data>
  <data name="SuitableFor" xml:space="preserve">
    <value>Suitable For:</value>
  </data>
  <data name="TenMonths" xml:space="preserve">
    <value>Ten Months</value>
  </data>
  <data name="ThreeMonths" xml:space="preserve">
    <value>Three Months</value>
  </data>
  <data name="TimeOfExperience" xml:space="preserve">
    <value>Time Of Experience</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TwelveMonths" xml:space="preserve">
    <value>Twelve Months</value>
  </data>
  <data name="TwoMonths" xml:space="preserve">
    <value>Two Months</value>
  </data>
  <data name="UpdateDateTime" xml:space="preserve">
    <value>Update Date Time</value>
  </data>
  <data name="WholePrice" xml:space="preserve">
    <value>Whole Price</value>
  </data>
  <data name="WorkingHours" xml:space="preserve">
    <value>Working Hours</value>
  </data>
</root>